{"version":3,"file":"shadow.cljs.devtools.client.hud.js","sources":["shadow/cljs/devtools/client/hud.cljs"],"mappings":"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","names":["shadow.cljs.devtools.client.hud/open-file","file","line","column","js/console.log","req","shadow.xhr.chan.cljs$core$IFn$_invoke$arity$4","shadow.cljs.devtools.client.env/get-url-base","c__34082__auto__","cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1","cljs.core.async.impl.dispatch/run","f__34084__auto__","switch__33799__auto__","state_38405","state_val_38406","statearr-38407","cljs.core.async.impl.ioc-helpers/take!","inst_38369","inst_38375","inst_38376","cljs.core/not","statearr-38408","statearr-38409","statearr-38410","statearr-38411","inst_38378","inst_38379","inst_38380","inst_38381","cljs.core/PROTOCOL_SENTINEL","inst_38382","statearr-38412","statearr-38413","inst_38401","statearr-38414","statearr-38415","inst_38391","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","statearr-38416","inst_38370","statearr-38417","statearr-38418","statearr-38419","inst_38386","statearr-38420","statearr-38421","inst_38403","cljs.core.async.impl.ioc-helpers/return-chan","inst_38394","inst_38395","cljs.core.get.cljs$core$IFn$_invoke$arity$2","inst_38396","statearr-38422","statearr-38423","statearr-38424","inst_38399","statearr-38425","statearr-38426","inst_38389","statearr-38427","statearr-38428","statearr-38429","state-machine__33800__auto__","ret-value__33801__auto__","result__33802__auto__","cljs.core/keyword-identical?","e38430","js/Object","ex__33803__auto__","statearr-38431","cljs.core.async.impl.ioc-helpers/process-exception","state__34085__auto__","statearr-38432","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","js/console.warn","shadow.cljs.devtools.client.hud/socket-ref","cljs.core/volatile!","var_args","G__38456","shadow.cljs.devtools.client.hud/dom-insert","js/Error","node","shadow.cljs.devtools.client.hud.dom_insert.cljs$core$IFn$_invoke$arity$2","js/document.body","where","el","shadow.dom/dom-node","id","cljs.core/seq","temp__5461__auto__","x","shadow.dom.by_id.cljs$core$IFn$_invoke$arity$1","shadow.dom/remove","shadow.dom.append.cljs$core$IFn$_invoke$arity$2","shadow.cljs.devtools.client.hud/hud-id","shadow.cljs.devtools.client.hud/load-id","shadow.cljs.devtools.client.hud/logo-svg","s-path","shadow.dom.svg.cljs$core$IFn$_invoke$arity$variadic","shadow.cljs.devtools.client.hud/load-start","shadow.cljs.devtools.client.hud.dom_insert.cljs$core$IFn$_invoke$arity$1","shadow.cljs.devtools.client.hud/load-end-success","container-el","shadow.animate/start","shadow.animate.transition.cljs$core$IFn$_invoke$arity$4","state_38472","state_val_38473","inst_38460","inst_38462","inst_38463","inst_38464","inst_38465","inst_38466","cljs.core/PersistentHashMap","inst_38467","statearr-38474","inst_38469","inst_38470","statearr-38475","statearr-38476","e38477","statearr-38478","statearr-38479","cljs.core.async/timeout","shadow.cljs.devtools.client.hud/load-end","shadow.cljs.devtools.client.hud/hud-hide","d","shadow.cljs.devtools.client.hud/source-line-styles","shadow.cljs.devtools.client.hud/source-highlight-styles","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","shadow.cljs.devtools.client.hud/source-line-html","start-idx","lines","styles","iter__6008__auto__","s__38483","cljs.core/LazySeq","temp__5457__auto__","cljs.core/chunked-seq?","c__6006__auto__","size__6007__auto__","cljs.core/count","b__38485","cljs.core/chunk-buffer","i__38484","vec__38486","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__38482","cljs.core/chunk-rest","vec__38492","cljs.core/first","cljs.core/cons","cljs.core/rest","idx","text","cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2","cljs.core/vector","G__38489","G__38490","G__38491","G__38495","G__38496","G__38497","goog.string/format","shadow.cljs.devtools.client.hud/sep-length","G__38500","shadow.cljs.devtools.client.hud/sep-line","shadow.cljs.devtools.client.hud.sep_line.cljs$core$IFn$_invoke$arity$2","label","offset","sep-len","js/Math.max","len","sep","c","cljs.core.repeat.cljs$core$IFn$_invoke$arity$2","clojure.string.join.cljs$core$IFn$_invoke$arity$2","p__38502","map__38503","shadow.cljs.devtools.client.hud/file-link","resource-name","warning","e","shadow.dom.ev_stop.cljs$core$IFn$_invoke$arity$1","p__38505","map__38506","shadow.cljs.devtools.client.hud/html-for-warning","msg","source-excerpt","map__38508","before","after","arrow-idx","or__5126__auto__","shadow.cljs.devtools.client.hud.sep_line.cljs$core$IFn$_invoke$arity$0","p__38511","map__38512","shadow.cljs.devtools.client.hud/hud-warnings","type","info","map__38514","sources","sources-with-warnings","p1__38510#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core.into.cljs$core$IFn$_invoke$arity$2","s__38517","xs__6012__auto__","map__38522","iterys__6004__auto__","s__38519","b__38521","i__38520","iter__38518","fs__6005__auto__","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","iter__38516","warnings","src","p__38526","map__38527","shadow.cljs.devtools.client.hud/hud-error","report","shadow.cljs.devtools.client.hud/handle-message","G__38529","cljs.core/Keyword","shadow.cljs.devtools.client.hud/ws-connect","socket","shadow.cljs.devtools.client.env/ws-listener-url","js/WebSocket","cljs.core/vreset!","shadow.cljs.devtools.client.env/process-ws-msg","shadow.cljs.devtools.client.env/enabled","cljs.core/deref","s","cljs.core/chunk-first"],"sourcesContent":["(ns shadow.cljs.devtools.client.hud\n  (:require\n    [shadow.dom :as dom]\n    [shadow.xhr :as xhr]\n    [shadow.animate :as anim]\n    [shadow.cljs.devtools.client.env :as env]\n    [shadow.cljs.devtools.client.browser :as browser]\n    [cljs.tools.reader :as reader]\n    [cljs.core.async :as async :refer (go)]\n    [goog.string.format]\n    [goog.string :refer (format)]\n    [clojure.string :as str]))\n\n(defn open-file [file line column]\n  (js/console.log \"opening file\" file line column)\n\n  (let [req\n        (xhr/chan :POST\n          (str (env/get-url-base) \"/api/open-file\")\n          {:file file\n           :line line\n           :column column}\n          {:with-credentials false\n           :body-only true})]\n    (go (when-some [{:keys [exit] :as result} (<! req)]\n          (when-not (zero? exit)\n            (js/console.warn \"file open failed\" result))\n          ))))\n\n(defonce socket-ref (volatile! nil))\n\n(defn dom-insert\n  ([node]\n   (dom-insert js/document.body node))\n  ([where node]\n   (let [el (dom/dom-node node)\n         id (.-id el)]\n     (assert (seq id))\n     (when-some [x (dom/by-id id)]\n       (dom/remove x))\n     (dom/append where el)\n     )))\n\n(def hud-id \"shadow-hud-container\")\n\n(def load-id \"shadow-hud-loading-container\")\n\n(def logo-svg\n  (let [s-path\n        \"M247.183941,141.416413 C247.183941,74.7839971 148.383423,78.9723529 148.383423,141.416413 C148.383423,203.860473 265.090698,171.864644 265.090698,248.900057 C265.090698,325.93547 135,325.851749 135,251.708304\"]\n    (dom/svg\n      {:id \"shadow-cljs-logo\"\n       :version \"1.1\"\n       :viewBox \"0 0 400 400\"\n       :style {:display \"block\"}\n       :height \"60px\"\n       :width \"60px\"}\n      [:title \"shadow-cljs\"]\n      [:defs\n       [:mask#shadow-cljs-logo-mask {:fill \"#fff\"}\n        [:circle {:r \"200\" :cy \"200\" :cx \"200\"}]]]\n      [:g\n       {:fill-rule \"evenodd\"\n        :fill \"none\"\n        :stroke-width \"0\"\n        :stroke \"none\"\n        :mask \"url(#shadow-cljs-logo-mask)\"}\n\n       [:g.circles\n        [:circle.blue {:r \"200\" :cy \"200\" :cx \"200\" :fill \"#4F80DF\"}]\n        [:circle.light-blue {:r \"71.5\" :cy \"200\" :cx \"370\" :fill \"#89B4FF\"}]\n        [:circle.dark-green {:r \"180\" :cy \"360\" :cx \"60\" :fill \"#40B400\"}]\n        [:circle.light-green {:r \"129\" :cy \"320\" :cx \"280\" :fill \"#76E013\"}]\n        [:animateTransform\n         {:attributeType \"xml\"\n          :attributeName \"transform\"\n          :type \"rotate\"\n          :from \"0 200 200\"\n          :to \"360 200 200\"\n          :dur \"3s\"\n          :repeatCount \"indefinite\"}]]\n\n       ;; S shadow\n       [:g {:transform \"translate(10,10)\"}\n        [:path\n         {:stroke-linecap \"square\"\n          :stroke-width \"16\"\n          :stroke \"#aaa\"\n          :d s-path}]]\n       ;; S\n       [:path\n        {:stroke-linecap \"square\"\n         :stroke-width \"16\"\n         :stroke \"#FFFFFF\"\n         :d s-path}]\n       ])))\n\n(defn load-start []\n  (dom-insert\n    [:div {:id load-id\n           :style {:position \"absolute\"\n                   :pointer-events \"none\"\n                   :left \"0px\"\n                   :bottom \"20px\"}}\n     [:div {:style {:background \"#eee\"\n                    :border-top-right-radius \"40px\"\n                    :border-bottom-right-radius \"40px\"\n                    :box-shadow \"2px 2px 10px #aaa\"\n                    :padding \"10px\"}}\n      logo-svg]]))\n\n(defn load-end-success []\n  (when-some [container-el (dom/by-id load-id)]\n    (let [el (.-firstChild container-el)]\n      (anim/start 500 {el (anim/transition :background \"#eee\" \"#40B400\" \"ease-out\")})\n      (go (<! (async/timeout 250))\n          (<! (anim/start 250 {el (anim/transition :opacity \"1\" \"0\" \"ease-in\")}))\n          (dom/remove container-el)\n\n          ))))\n\n(defn load-end []\n  (when-some [el (dom/by-id load-id)]\n    (dom/remove el)\n    ))\n\n(defn hud-hide []\n  (when-some [d (dom/by-id hud-id)]\n    (dom/remove d)))\n\n(def source-line-styles\n  {:padding \"0\"\n   :margin \"0\"})\n\n(def source-highlight-styles\n  (assoc source-line-styles\n    :font-weight \"bold\"))\n\n(defn source-line-html\n  [start-idx lines styles]\n  (->> (for [[idx text] (map-indexed vector lines)]\n         [:pre {:style styles} (format \"%4d | %s\" (+ 1 idx start-idx) text)])))\n\n(def sep-length 80)\n\n(defn sep-line\n  ([]\n   (sep-line \"\" 0))\n  ([label offset]\n   (let [sep-len (js/Math.max sep-length offset)\n         len (count label)\n\n         sep\n         (fn [c]\n           (->> (repeat c \"-\")\n                (str/join \"\")))]\n     (str (sep offset) label (sep (- sep-len (+ offset len)))))))\n\n(defn file-link [{:keys [resource-name file line column] :as warning}]\n  (if-not file\n    [:span resource-name]\n\n    [:span {:style {:text-decoration \"underline\"\n                    :color \"blue\"\n                    :cursor \"pointer\"}\n            :on {:click (fn [e]\n                          (dom/ev-stop e)\n                          (open-file file line column)\n                          )}}\n\n     resource-name]))\n\n(defn html-for-warning [{:keys [resource-name msg file line column source-excerpt] :as warning}]\n  [:div {:style {:border \"2px solid #ccc\"\n\n                 :margin-bottom \"10px\"}}\n\n   [:div {:style {:line-height \"16px\"\n                  :background-color \"#fadb64\"\n                  :padding \"10px\"\n                  :font-size \"1.2em\"\n                  :font-weight \"bold\"}}\n    [:span \"WARNING in \"]\n    (file-link warning)]\n\n   (when source-excerpt\n     (let [{:keys [start-idx before line after]} source-excerpt]\n       [:div {:style {:padding \"10px 10px\"\n                      :background-color \"#fff\"\n                      :border-top \"2px solid #ccc\"}}\n        (source-line-html start-idx before source-line-styles)\n        (source-line-html (+ start-idx (count before)) [line] source-highlight-styles)\n        (let [arrow-idx (+ 6 (or column 1))]\n          [:pre {:style source-highlight-styles} (sep-line \"^\" arrow-idx)])\n        [:div {:style {:font-weight \"bold\" :font-size \"1.2em\" :padding \"10px 0\"}} msg]\n        [:pre {:style source-highlight-styles} (sep-line)]\n        (source-line-html (+ start-idx (count before) 1) after source-line-styles)]\n       ))])\n\n(defn hud-warnings [{:keys [type info] :as msg}]\n  (let [{:keys [sources]}\n        info\n\n        sources-with-warnings\n        (->> sources\n             (filter #(seq (:warnings %)))\n             (into []))]\n\n    (if-not (seq sources-with-warnings)\n      (load-end-success)\n      ;; TODO: fancy transition from logo to warnings\n      (do (load-end)\n          (dom-insert\n            [:div\n             {:id hud-id\n              :style {:position \"absolute\"\n                      :z-index \"10000\"\n                      :left \"0px\"\n                      :bottom \"0px\"\n                      :right \"0px\"\n                      :padding \"10px 10px 0 10px\"\n                      :overflow \"auto\"\n                      :font-family \"monospace\"\n                      :font-size \"12px\"}}\n             (for [{:keys [warnings] :as src} sources-with-warnings\n                   warning warnings]\n               (html-for-warning warning))]))\n      )))\n\n(defn hud-error [{:keys [report] :as msg}]\n  (dom-insert\n    [:div\n     {:id hud-id\n      :style {:position \"absolute\"\n              :left \"0px\"\n              :top \"0px\"\n              :bottom \"0px\"\n              :right \"0px\"\n              :color \"#000\"\n              :background-color \"#fff\"\n              :border \"5px solid red\"\n              :z-index \"100\"\n              :padding \"20px\"\n              :overflow \"auto\"\n              :font-family \"monospace\"\n              :font-size \"12px\"}}\n     [:div {:style \"color: red; margin-bottom: 10px; font-size: 2em;\"} \"Compilation failed!\"]\n     [:pre report]]))\n\n(defn handle-message [msg]\n  ;; (js/console.log \"hud msg\" msg)\n  (case (:type msg)\n    :build-complete\n    (hud-warnings msg)\n\n    :build-failure\n    (do (load-end)\n        (hud-error msg))\n\n    :build-init\n    (hud-warnings msg)\n\n    :build-start\n    (do (hud-hide)\n        (load-start))\n\n    ;; default\n    :ignored))\n\n(defn ws-connect []\n  (let [socket\n        (-> (env/ws-listener-url :browser)\n            (js/WebSocket.))]\n\n    (vreset! socket-ref socket)\n\n    (set! (.-onmessage socket)\n      (fn [e]\n        (env/process-ws-msg e handle-message)))\n\n    (set! (.-onopen socket)\n      (fn [e]\n        ;; do something on connect\n        ))\n\n    (set! (.-onclose socket)\n      (fn [e]\n        ;; cleanup on close\n        (vreset! socket-ref nil)\n        ))\n\n    (set! (.-onerror socket)\n      (fn [e]\n        ))\n    ))\n\n(when ^boolean env/enabled\n  ;; disconnect an already connected socket, happens if this file is reloaded\n  ;; pretty much only for me while working on this file\n  (when-let [s @socket-ref]\n    (set! (.-onclose s) (fn [e]))\n    (.close s))\n\n  (ws-connect))\n"]}